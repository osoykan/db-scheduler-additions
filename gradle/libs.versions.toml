[versions]
kotlin = "2.2.10"
kotlinx = "1.10.2"
jackson = "2.20.0"
arrow = "2.1.2"
micrometer-prometheus = "1.15.4"
dbscheduler = "16.1.0"
slf4j = "2.0.17"
ktor = "3.3.0"
koin = "4.1.1"
mongodb = "5.6.0"

## test
kotest = "6.0.3"

[libraries]
# Kotlin
kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinx" }

# Arrow
arrow-core = { module = "io.arrow-kt:arrow-core", version.ref = "arrow" }

# Jackson
jackson-kotlin = { module = "com.fasterxml.jackson.module:jackson-module-kotlin", version.ref = "jackson" }
jackson-datatype-jsr310 = { module = "com.fasterxml.jackson.datatype:jackson-datatype-jsr310", version.ref = "jackson" }
jackson-databind = { module = "com.fasterxml.jackson.core:jackson-databind", version.ref = "jackson" }
jackson-parameternames = { module = "com.fasterxml.jackson.module:jackson-module-parameter-names", version.ref = "jackson" }

# Logging
logback-classic = { module = "ch.qos.logback:logback-classic", version = "1.5.18" }
slf4j-api = { module = "org.slf4j:slf4j-api", version.ref = "slf4j" }
janino = { module = "org.codehaus.janino:janino", version = "3.1.12" }

# koin
koin = { module = "io.insert-koin:koin-core", version.ref = "koin" }
koin-ktor = { module = "io.insert-koin:koin-ktor", version.ref = "koin" }

# Ktor
ktor-server-core = { module = "io.ktor:ktor-server-core", version.ref = "ktor" }
ktor-server-config-yml = { module = "io.ktor:ktor-server-config-yaml", version.ref = "ktor" }
ktor-server-content-negotiation = { module = "io.ktor:ktor-server-content-negotiation", version.ref = "ktor" }
ktor-serialization-jackson-json = { module = "io.ktor:ktor-serialization-jackson", version.ref = "ktor" }
ktor-server-netty = { module = "io.ktor:ktor-server-netty", version.ref = "ktor" }
ktor-server-statuspages = { module = "io.ktor:ktor-server-status-pages", version.ref = "ktor" }
ktor-server-callLogging = { module = "io.ktor:ktor-server-call-logging", version.ref = "ktor" }
ktor-server-autoHeadResponse = { module = "io.ktor:ktor-server-auto-head-response", version.ref = "ktor" }
ktor-server-cachingHeaders = { module = "io.ktor:ktor-server-caching-headers", version.ref = "ktor" }
ktor-server-callId = { module = "io.ktor:ktor-server-call-id", version.ref = "ktor" }
ktor-server-conditionalHeaders = { module = "io.ktor:ktor-server-conditional-headers", version.ref = "ktor" }
ktor-server-cors = { module = "io.ktor:ktor-server-cors", version.ref = "ktor" }
ktor-server-defaultHeaders = { module = "io.ktor:ktor-server-default-headers", version.ref = "ktor" }


# Others
dbScheduler = { module = "com.github.kagkarlsson:db-scheduler", version.ref = "dbscheduler" }
micrometer-prometheus = { module = "io.micrometer:micrometer-registry-prometheus", version.ref = "micrometer-prometheus" }
mongodb-kotlin-coroutine = { module = "org.mongodb:mongodb-driver-kotlin-coroutine", version.ref = "mongodb" }

## Testing
kotest-runner-junit5 = { module = "io.kotest:kotest-runner-junit5", version.ref = "kotest" }
kotest-property-jvm = { module = "io.kotest:kotest-property-jvm", version.ref = "kotest" }
datafaker = { module = "net.datafaker:datafaker", version = "2.5.1" }
kotlinlogging = { module = "io.github.oshai:kotlin-logging", version = "7.0.13" }
hikari = { module = "com.zaxxer:HikariCP", version = "7.0.2" }
postgresql = { module = "org.postgresql:postgresql", version = "42.7.8" }
testcontainers-postgresql = { module = "org.testcontainers:postgresql", version = "1.21.3" }
testcontainers-mongo = { module = "org.testcontainers:mongodb", version = "1.21.3" }

[plugins]
testLogger = { id = "com.adarshr.test-logger", version = "4.0.0" }
spotless = { id = "com.diffplug.spotless", version = "7.2.1" }
kover = { id = "org.jetbrains.kotlinx.kover", version = "0.9.2" }
maven-publish = { id = "com.vanniktech.maven.publish", version = "0.34.0" }
node = { id = "com.github.node-gradle.node", version = "7.1.0" }
